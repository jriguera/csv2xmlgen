# csv2xmlgen
# Copyright (C) 2010
# This file is distributed under the same license as the ToolBox package.
# Jose Riguera Lopez <jriguera@gmail.com>, 2010.
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 0.3.0\n"
"Report-Msgid-Bugs-To: Jose Riguera <jriguera@gmail.com>\n"
"POT-Creation-Date: 2010-05-04 21:37+0200\n"
"PO-Revision-Date: 2010-05-04 22:24+0200\n"
"Last-Translator: Jose Riguera Lopez <jriguera@gmail.com>\n"
"Language-Team: Spanish <>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: csv2xmlgen.py:97
#, python-format
msgid ""
"Cannot open '%(input)s' for reading: I/O error (%(errno)s): %(strerror)s."
msgstr ""
"Imposible abrir '%(input)s' para lectura: Error de E/S (%(errno)s): %"
"(strerror)s."

#: csv2xmlgen.py:104
#, python-format
msgid ""
"Cannot open '%(output)s' for writing: I/O error (%(errno)s): %(strerror)s."
msgstr ""
"Imposible abrir '%(output)s' para escritura: Error de E/S (%(errno)s): %"
"(strerror)s."

#: csv2xmlgen.py:114
#, python-format
msgid "Cannot parse XML template: %s."
msgstr "Imposible analizar XML: %s."

#: csv2xmlgen.py:118
#, python-format
msgid ""
"Processing input file '%(input)s' with XML template '%(xmltemplate)s' ... "
msgstr ""
"Procesando fichero '%(input)s' con la plantilla XML '%(xmltemplate)s' ... "

#: csv2xmlgen.py:125
#, python-format
msgid "Processing CSV data: '%s'."
msgstr "Procesando datos CSV: '%s'."

#: csv2xmlgen.py:125 csv2xmlgen.py:173
msgid "- ERROR: "
msgstr "- ERROR: "

#: csv2xmlgen.py:126
#, python-format
msgid "~ %s processed lines."
msgstr "~ %s líneas procesadas."

#: csv2xmlgen.py:139
#, python-format
msgid "XML file '%s' generated."
msgstr "Fichero XML '%s' generado."

#: csv2xmlgen.py:173
#, python-format
msgid "Reading CSV file, line %(line)s: %(exception)s."
msgstr "Leyendo fichero CSV, línea %(line)s: %(exception)s."

#: csv2xmlgen.py:185
#, python-format
msgid ""
" \n"
"[python] %(program)s [-c <file>] [-i <file>] [-n 'root.node ...'] [-o "
"<file>] [-t <file>]\n"
"\n"
"Options:\n"
"\n"
"        -c, --config <file>                Configuration file.\n"
"        -h, --help                         Show this help and exits.\n"
"        -i, --input <file>                 Input data in CSV format.\n"
"        -n, --templatenodes \"root.node\"    Template node(s) (in XML "
"Template).\n"
"        -o, --output <file>                XML output file.\n"
"        -t, --template <file>              XML input Template.\n"
"\n"
"The XML resulting file is generated from the structure of the XML Template \n"
"file by repeating those nodes indicated by \"templatenodes\" (see "
"configuration\n"
"file) for each line of data in the CSV input file. To do this, the program \n"
"replaces the headers listed in XML Template with data from each line of "
"the \n"
"CSV file, generating the same number of nodes that lines in CSV file. The \n"
"nodes are indicated with the complete 'path' from the root node of the XML \n"
"document to the node to be \"repeated\", each element is separated by "
"'.' , \n"
"for example: \"XMLRootElement.element.node\". The root node is not a valid \n"
"template node, for obvious reasons. \n"
"\n"
"The CSV input file and/or XML output file can be stdin and stdout \n"
"(respectively) by simply stating '-' instead of the file name. \n"
"\n"
"The program looks for the default configuration file \"csv2xmlgen.cfg\", but "
"it\n"
"is not necessary if all the arguments of the program are supplied, the "
"rest \n"
"of arguments take the default value. These entries are permitted and \n"
"established by default in the configuration file:\n"
"\n"
"    # csv2xmlgen configuration file. \n"
"    # All sections are mandatory, even without content. \n"
"    # This is a comment, not processed, and ...\n"
"    ; this is another comment that was not taken into account.\n"
"    # Here are the default value of program parameters.\n"
"    \n"
"    # Main options\n"
"    [main]\n"
"         CsvInputFile = entrada.csv\n"
"         XmlOutputFile = salida.xml\n"
"         XmlTemplate = plantilla.xml\n"
"         TemplateNodes = XMLRootElement.element0.node1 XMLRootElement."
"element2.node0\n"
"         # Separator to indicate default values in the XML Template.\n"
"         SeparatorKey = |\n"
"         # Default value for data without default value in the XML template "
"file\n"
"         DefaultValue = \n"
"\n"
"    # CSV input file (Comma Separated Values)\n"
"    [csv]\n"
"         # If the CSV has no header, must be given here\n"
"         ; Headers = Header1 header2 Header3 Header4\n"
"         # CSV separator data character\n"
"         delimiter =,\n"
"         # Escape character\n"
"         ; quotechar = `\"`\n"
"         # Data encoding. Try to determine the best encoding from de list "
"below\n"
"         encoding = utf-8 windows-1252 iso-8859-1 iso-8859-2 us-ascii\n"
"\n"
"    # XML output data\n"
"    [xml]\n"
"         # End of line character\n"
"         ; lineterminator = \n"
"\n"
"\n"
"    # Other values\n"
"    [template]\n"
"         author = Noe\n"
"         date = December 2008\n"
"\n"
"Example of input template file:\n"
"\n"
"    <XMLRootElement Author=\"%%(author)s\" date='%%(date|ano da pera)s'>\n"
"       <element0 id='%%(NUMBER|0)s'>\n"
"          <node1>\n"
"             The content is %%(CONTENIDO0|no content)s .\n"
"          </node1>\n"
"       </element0>\n"
"       <element2>\n"
"          <node0>\n"
"              The content is %%(CONTENIDO2|no content)s .\n"
"          </node0>\n"
"       </element2>\n"
"    </XMLRootElement>\n"
"\n"
"CSV input data file for the above XML template:\n"
"\n"
"    NUMBER, CONTENIDO0, CONTENIDO2\n"
"    0, prueba0, TEST 0\n"
"    1, data1, TEST 1\n"
"    2, data 2, TEST 2\n"
"\n"
"The output file is left as an exercise for the reader ... \n"
msgstr ""
" \n"
"[python] %(program)s [-c <file>] [-i <file>] [-n 'root.node ...'] [-o "
"<file>] [-t <file>]\n"
"\n"
"Opciones:\n"
"\n"
"        -c, --config <file>                Fichero de configuración.\n"
"        -h, --help                         Muestra esta ayuda y sale.\n"
"        -i, --input <file>                 Datos de entrada en formato CSV.\n"
"        -n, --templatenodes \"root.node\"    Nodos de la plantilla XML.\n"
"        -o, --output <file>                Fichero XML de salida.\n"
"        -t, --template <file>              Plantilla XML de entrada.\n"
"\n"
"El fichero XML resultante se genera a partir de la plantilla de entrada, "
"repitiendo aquellos nodos indicados por \"templatenodes\" (ver fichero de "
"configuración) ante cada nueva línea de datos del fichero de entrada CSV. "
"Para ello, se sustituyen las cabeceras indicadas en la plantilla XML, con  "
"los datos de cada línea CSV, generando el mismo número de nodos que líneas "
"del fichero CSV. Los nodos se indican con el 'camino' completo desde el nodo "
"raíz del documento XML hasta el nodo que debe repetirse, separando cada "
"elemento por '.', por ejemplo: \"XMLRootElement.element.node\". El nodo raíz "
"no es un elemento plantilla válido, por motivos obvios.\n"
"\n"
"El fichero de entrada CSV y/o el fichero XML de salida pueden ser la entrada "
"y salida estándar (respectivamente) simplemente indicando '-' en lugar del "
"fichero.\n"
"\n"
"Por defecto se busca el fichero de configuración \"csv2xmlgen.cfg\", pero no "
"es necesario tener el fichero si establecen todos los argumentos del "
"programa, para el resto de argumentos se toman los valores por defecto. Las "
"entradas permitidas y establecidas por defecto son las siguientes:\n"
"\n"
"    # Fichero de configuración del programa csv2xmlgen. \n"
"    # Todas las secciones son obligatorias, aunque no tengan contenido. \n"
"    # Esto es un comentario, no se procesa, y ...\n"
"    ; este es otro comentario que tampoco se tiene en cuenta.\n"
"    # Aquí se muestran los parámetros por defecto.\n"
"\n"
"    # Opciones principales\n"
"    [main]\n"
"    CsvInputFile = entrada.csv\n"
"    XmlOutputFile = salida.xml\n"
"    XmlTemplate = plantilla.xml\n"
"    TemplateNodes = XMLRootElement.element0.node1 XMLRootElement.element2."
"node0\n"
"    # Separador para indicar valores por defecto en la plantilla.\n"
"    SeparatorKey = |\n"
"    # Valor por defecto, para datos sin valor por defecto.\n"
"    DefaultValue = \n"
"\n"
"    # Datos de entrada CSV (Comma Separated Values)\n"
"    [csv]\n"
"    # Si el CSV, no tiene cabeceras, se deben indicar aquí.\n"
"    ; Headers = Header1 Header2 Header3 Header4\n"
"    # Separador de los datos de entrada.\n"
"    delimiter = ,\n"
"    # Carácter de escape.\n"
"    ;quotechar = \"\n"
"    # Codificación de los datos. Intenta determinar la mejor codificación\n"
"    # a partir de la lista indicada.\n"
"    encoding = utf-8 windows-1252 iso-8859-1 iso-8859-2 us-ascii\n"
"\n"
"    # Datos de salida XML\n"
"    [xml]\n"
"    # Carácter fin de línea.\n"
"    ; lineterminator = \\\\r\\\\n\n"
"\n"
"    # Valores para indicar plantilla por defecto.\n"
"    [template]\n"
"    autor = Noe\n"
"    fecha = Octubre 2008\n"
"\n"
"Ejemplo de plantilla XML de entrada:\n"
"\n"
"    <XMLRootElement author=\"%%(autor)s\" date=\"%%(fecha|ano da pera)s\">\n"
"        <element0 id=\"%%(NUMBER|0)s\">\n"
"            <node1>\n"
"                El contenido 0 es %%(CONTENIDO0|sin contenido)s\n"
"            </node1>\n"
"        </element0>\n"
"        <element2>\n"
"            <node0>\n"
"                El contenido 2 es %%(CONTENIDO2|sin contenido)s\n"
"            </node0>\n"
"        </element2>\n"
"    </XMLRootElement>\n"
"\n"
"Datos CSV de entrada para la plantilla XML anterior:\n"
"\n"
"    NUMBER,CONTENIDO0,CONTENIDO2\n"
"    0,prueba0,prueba2\n"
"    1,datos csv,datos csv\n"
"    2, entrada,contenido\n"
"\n"
"El fichero de salida se deja como ejercicio al avispado lector ...\n"

#: csv2xmlgen.py:280
msgid ""
"\n"
"This program is free software: you can redistribute it and/or modify\n"
"it under the terms of the GNU General Public License as published by\n"
"the Free Software Foundation, either version 3 of the License, or\n"
"(at your option) any later version.\n"
"\n"
"This program is distributed in the hope that it will be useful,\n"
"but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
"GNU General Public License for more details.\n"
"\n"
"You should have received a copy of the GNU General Public License\n"
"along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
msgstr ""
"\n"
"Este programa es software libre: usted puede redistribuirlo y/o modificarlo "
"bajo los términos de la Licencia Pública General GNU publicada por la "
"Fundación para el Software Libre, ya sea la versión 3 de la Licencia, o (a "
"su elección) cualquier versión posterior.\n"
"\n"
"Este programa se distribuye con la esperanza de que sea útil, pero SIN "
"GARANTÍA ALGUNA; ni siquiera la garantía implícita MERCANTIL o de APTITUD "
"PARA UN PROPÓSITO DETERMINADO. Consulte los detalles de la Licencia Pública "
"General GNU para obtener una información más detallada. \n"
"\n"
"Debería haber recibido una copia de la Licencia Pública General GNU junto a "
"este programa. En caso contrario, consulte <http://www.gnu.org/licenses/>.\n"

#: csv2xmlgen.py:329
msgid "Searching config file ..."
msgstr "Buscando fichero de configuración ..."

#: csv2xmlgen.py:337
#, python-format
msgid "Cannot find the configuration file '%s'."
msgstr "Imposible encontrar el fichero de configuración '%s'."

#: csv2xmlgen.py:340
#, python-format
msgid "Reading configuration file '%s' ..."
msgstr "Leyendo fichero de configuración '%s' ..."

#: csv2xmlgen.py:343
#, python-format
msgid "Cannot understand config file format '%s'."
msgstr "Formato del fichero configuración desconocido '%s'."

#: csv2xmlgen.py:358
msgid "Using default compiled values ..."
msgstr "Usando valores establecidos por defecto ..."
