#summary Program Usage: arguments, options and configuration file
#labels Phase-Deploy,Featured,usage

= Introduction =

*csv2xmlgen* is a python program to generate XML files based on a template. It has been developed for generating KML files (Google Earth layers) from CSV data, but it can be used to process any kind of XML defined with the template. 


== Details ==

The XML resulting file is generated from structure of the XML Template file by repeating those nodes indicated by "_templatenodes_" (see configuration file) for each line of data in the CSV input file. To do this, the program replaces the headers listed in XML Template with data from each line of the CSV file, generating the same number of nodes that lines in CSV file. The nodes are indicated with the complete path from the root node of the XML document to the node to be repeated, each element is separated by *.* , for example: "_XMLRootElement.element.node_". The root node is not a valid template node, for obvious reasons.

== Options ==

The program it looks for the default configuration file "_csv2xmlgen.cfg_", but it is not necessary, if all the arguments of the program are supplied, the rest of arguments take the default value. 

=== Command line arguments ===

{{{
[python] csv2xmlgen.py [-c <file>] [-i <file>] [-n 'root.node ...'] [-o <file>] [-t <file>]
}}}

Argument details:
{{{
-c, --config <file>                Configuration file.
-h, --help                         Show this help and exits.
-i, --input <file>                 Input data in CSV format.
-n, --templatenodes "root.node"    template node(s) of the XML Template.
-o, --output <file>                XML resulting file.
-t, --template <file>              XML Template.
}}}

The CSV input file and/or XML output file can be _stdin_ and _stdout_ (respectively) by simply stating *-* instead of the file.

=== Configuration file ===

Entries permitted and established by default, shown below:

{{{
# csv2xmlgen configuration file. 
# All sections are mandatory, even without content. 
# This is a comment, not processed, and ...
; this is another comment that was not taken into account.

# Here are the default value of program parameters.

# Main options
[main]
     CsvInputFile = entrada.csv
     XmlOutputFile = salida.xml
     XmlTemplate = plantilla.xml
     TemplateNodes = XMLRootElement.element0.node1 XMLRootElement.element2.node0
     # Separator to indicate default values in the XML Template.
     SeparatorKey = |
     # Default value for data without default value in the XML template file
     DefaultValue = NULL

# CSV input file (Comma Separated Values)
[csv]
     # If the CSV has no header, must be given here
     ; Headers = Header1 header2 Header3 Header4
     # CSV separator data character
     delimiter =,
     # Escape character
     ; quotechar = `"`

# XML output data
[xml]
     # End of line character
     ; lineterminator = \n

# Other Values to indicate default template
[template]
     author = Fulanito
     date = December 2008

# EOF
}}}

=== XML Template file ===

Contents of example file _plantilla.xml_:

{{{
<XMLRootElement Author="%(author)s" date="%(date|ano da pera)s">
   <element0 id="%(NUMBER|0)s">
      <node1>
         The content is %(CONTENIDO0|no content)s .
      </node1>
   </element0>
   <element2>
      <node0>
          The content is %(CONTENIDO2|no content)s .
      </node0>
   </element2>
</XMLRootElement>
}}}

=== CSV input data ===

Values of example file _entrada.csv_:

{{{
NUMBER, CONTENIDO0, CONTENIDO2
0, prueba0, TEST 0
1, data1, TEST 1
2, data 2, TEST 2
}}}

=== XML Output file ===

The output file is left as an exercise for the reader clever ... 
